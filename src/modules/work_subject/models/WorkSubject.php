<?php
/* @author VasyaKog */
namespace app\modules\work_subject\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\console\controllers\HelpController;
use yii\helpers\Html;
use yii\db\ActiveRecord;

/**
 * @property integer $id
 * @property integer $plan_id
 * @property integer $subject_id
 * @property array $total
 * @property array $lectures
 * @property array $labs
 * @property array $practices
 * @property array $weeks
 * @property array $control
 * @property integer $cyclic_commission_id
 * @property string $certificate_name
 * @property string $diploma_name
 * @property integer $project_hours
 * @property array $control_hours
 * @property bool $dual_labs
 * @property bool $dual_practice */

class WorkSubject extends ActiveRecord
{
    
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
            [
                'StrBehavior' => [
                    'class' => 'application.behaviors.StrBehavior',
                    'fields' => [
                        'total',
                        'lectures',
                        'labs',
                        'practices',
                        'weeks',
                    ]
                ],
                'JSONBehavior' => [
                    'class' => 'application.behaviors.JSONBehavior',
                    'fields' => [
                        'control',
                        'control_hours',
                    ]
                ],
                // TODO: create behaviors
            ],
        ];
    }

    /**
     * @inheritdoc
     */

    public static function tableName()
    {
        return 'wp_subject';
    }

    /**
     * @inheritdoc
     */

    public function rules()
    {
        return [
            [['id', 'plan_id', 'subject_id', 'cyclic_commission_id', 'project_hours'], 'integer'],
            [['subject_id', 'dual_labs', 'dual_practice'], 'required'],
            [['total', 'lectures', 'labs', 'practices', 'weeks', 'control'], 'default', 'value' => ''],
            [['certification', 'diploma_name'], 'string', 'max' => 255],
            [['id'], 'unique'],
        ];
    }

    /**
     * @inheritdoc
     */

    /**
     * @property integer $id
     * @property integer $plan_id
     * @property integer $subject_id
     * @property array $total
     * @property array $lectures
     * @property array $labs
     * @property array $practices
     * @property array $weeks
     * @property array $control
     * @property integer $cyclic_commission_id
     * @property string $certificate_name
     * @property string $diploma_name
     * @property integer $project_hours
     * @property array $control_hours
     * @property bool $dual_labs
     * @property bool $dual_practice */


    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'plan_id' => Yii::t('app', 'Plan ID'),
            'subject_id' => Yii::t('app', 'Subject ID'),
            'total' => Yii::t('wp_subject', 'Total'),
            'lectures' => Yii::t('wp_subject', 'Lectures'),
            'labs' => Yii::t('wp_subject', 'Labaratory'),
            'practices' => Yii::t('app', 'Middle Name'),
            'weeks' => Yii::t('app', 'Gender'),
            'control' => Yii::t('app', 'Birth Day'),
            'cyclic_commission_id' => Yii::t('app', 'Passport Code'),
            'certification_name' => Yii::t('app', 'Tax Code'),
            'diploma_name' => Yii::t('app', 'Status'),
            'project_hours' => Yii::t('app','Birth Certificate'),
            'control_hours' => Yii::t('app', 'Created At'),
            'dual_labs' => Yii::t('app', 'Updated At'),
            'dual_practice'=>Yii::t('app', 'Passport issued'),
        ];
    }

    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {
            $this->birth_day = date('Y-m-d', strtotime($this->birth_day));
            return true;
        } else {
            return false;
        }
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->birth_day = date('d.m.Y', strtotime($this->birth_day));
    }

    public function getGenderName()
    {
        return $this->gender ? Yii::t('app', 'Female') : Yii::t('app', 'Male');
    }

    public function getFullName(){
        return $this->last_name.' '.$this->first_name.' '.$this->middle_name;
    }

    public function getShortName() {
        return $this->last_name.' '.mb_substr($this->first_name,0,1,'UTF-8').'.'.mb_substr($this->middle_name,0,1,'UTF-8').'.';
    }

    public function getLink(){
        return Html::a($this->getShortName(),['student/default/view','id'=>$this->id]);
    }

    public function getPhoto(){
        if(!is_null($this->getThumbFileUrl('photo', 'thumb'))){
            return Html::img($this->getThumbFileUrl('photo', 'thumb'),['height'=>200,'width'=>150]);
        }
        return Yii::t('app','Image not set');
    }

}
