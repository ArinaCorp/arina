<?php
/* @author VasyaKog */
namespace app\modules\students\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\console\controllers\HelpController;
use yii\helpers\Html;

/**
 * @property integer $id
 * @property integer $plan_id
 * @property integer $subject_id
 * @property array $total
 * @property array $lectures
 * @property array $labs
 * @property array $practs
 * @property array $weeks
 * @property array $control
 * @property integer $cyclic_commission_id
 * @property string $certificate_name
 * @property string $diploma_name
 * @property integer $project_hours
 * @property array $control_hours
 * @property bool $dual_labs
 * @property bool $dual_practice */

class WorkSubject extends ActiveRecord
{
    
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
            [
                'class' => '\yiidreamteam\upload\ImageUploadBehavior',
                'attribute' => 'photo',
                'thumbs' => [
                    'thumb' => ['width' => 300, 'height' => 400,'quality'=>50],
                ],
                'filePath' => '@webroot/uploads/students/photo/[[model]]_[[pk]].[[extension]]',
                'fileUrl' => '/uploads/students/photo/[[model]]_[[pk]].[[extension]]',
                'thumbPath' => '@webroot/uploads/students/photo/[[model]]_[[profile]]_[[pk]].[[extension]]',
                'thumbUrl' => '/uploads/students/photo/[[model]]_[[profile]]_[[pk]].[[extension]]',
            ],
        ]; // TODO: Change the autogenerated stub

    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'student';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['sseed_id', 'user_id', 'gender', 'status', 'created_at', 'updated_at'], 'integer'],
            [['last_name', 'first_name', 'middle_name', 'gender'], 'required'],
            [['birth_day'], 'safe'],
            [['student_code', 'passport_code','birth_certificate'], 'string', 'max' => 12],
            [['last_name', 'first_name', 'middle_name','passport_issued'], 'string', 'max' => 255],
            [['tax_id'], 'string', 'min' => 10, 'max' => 10],
            [['student_code'], 'unique'],
            [['sseed_id'], 'unique'],
            [['user_id'], 'unique'],
            [['passport_code'], 'unique'],
            [['tax_id'], 'unique'],
            ['photo', 'file', 'extensions' => 'jpg, gif, png'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'student_code' => Yii::t('app', 'Student Code'),
            'sseed_id' => Yii::t('app', 'Sseed ID'),
            'user_id' => Yii::t('app', 'User ID'),
            'last_name' => Yii::t('app', 'Last Name'),
            'first_name' => Yii::t('app', 'First Name'),
            'middle_name' => Yii::t('app', 'Middle Name'),
            'gender' => Yii::t('app', 'Gender'),
            'birth_day' => Yii::t('app', 'Birth Day'),
            'passport_code' => Yii::t('app', 'Passport Code'),
            'tax_id' => Yii::t('app', 'Tax Code'),
            'status' => Yii::t('app', 'Status'),
            'birth_certificate' => Yii::t('app','Birth Certificate'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'passport_issued'=>Yii::t('app', 'Passport issued'),
            'photo'=>Yii::t('app','Photo'),
        ];
    }

    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {
            $this->birth_day = date('Y-m-d', strtotime($this->birth_day));
            return true;
        } else {
            return false;
        }
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->birth_day = date('d.m.Y', strtotime($this->birth_day));
    }

    public function getGenderName()
    {
        return $this->gender ? Yii::t('app', 'Female') : Yii::t('app', 'Male');
    }

    public function getFullName(){
        return $this->last_name.' '.$this->first_name.' '.$this->middle_name;
    }

    public function getShortName() {
        return $this->last_name.' '.mb_substr($this->first_name,0,1,'UTF-8').'.'.mb_substr($this->middle_name,0,1,'UTF-8').'.';
    }

    public function getLink(){
        return Html::a($this->getShortName(),['student/default/view','id'=>$this->id]);
    }

    public function getPhoto(){
        if(!is_null($this->getThumbFileUrl('photo', 'thumb'))){
            return Html::img($this->getThumbFileUrl('photo', 'thumb'),['height'=>200,'width'=>150]);
        }
        return Yii::t('app','Image not set');
    }

}
